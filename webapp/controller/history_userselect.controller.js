sap.ui.define(["sap/ui/core/mvc/Controller"], function(Controller) {
	"use strict";
	return Controller.extend("hackaton.controller.history_userselect", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf hackaton.view.history_userselect
		 */ //	
		onInit: function() {
			this.oRouter = sap.ui.core.UIComponent.getRouterFor(this);
		},
		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf hackaton.view.history_userselect
		 */ //	onBeforeRendering: function() {
		//
		//	},
		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf hackaton.view.history_userselect
		 */ //	onAfterRendering: function() {
		//
		//	},
		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf hackaton.view.history_userselect
		 */ //	onExit: function() {
		//
		//	}
		/**
		 *@memberOf hackaton.controller.history_userselect
		 */
		onSelect: function(oEvt) {
			//This code was generated by the layout editor.
			var id = oEvt.getParameter("listItems")[0].data("userid");	
			this.oRouter.navTo("History_main", {
			        userid: id 
			});
		},
		
		onNavBack: function(oEvent) {
			this.oRouter.navTo("Home");
		}
		
	});
});